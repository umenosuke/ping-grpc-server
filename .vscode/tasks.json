{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "develop container build",
            "type": "shell",
            "command": "source .script/_conf.sh; docker-compose -f .docker/docker-compose.yml build",
            "problemMatcher": []
        },
        {
            "label": "develop container start",
            "type": "shell",
            "command": "source .script/_conf.sh; docker-compose -f .docker/docker-compose.yml up -d",
            "problemMatcher": []
        },
        {
            "label": "develop container stop",
            "type": "shell",
            "command": "source .script/_conf.sh; docker-compose -f .docker/docker-compose.yml stop",
            "problemMatcher": []
        },
        {
            "label": "develop container remove",
            "type": "shell",
            "command": "source .script/_conf.sh; docker-compose -f .docker/docker-compose.yml down",
            "problemMatcher": []
        },
        {
            "label": "go-build",
            "type": "shell",
            "command": "source .script/_conf.sh; docker exec -it go_build_${_PRJ_NAME} target_data/.script/go_build.sh 'linux' 'amd64' './src' \"build/${_PRJ_NAME}\" && sudo setcap cap_net_raw=ep \"build/${_PRJ_NAME}\"",
            "dependsOn": [
                "develop container start"
            ],
            "problemMatcher": [
                "$go"
            ]
        },
        {
            "label": "go-build-windows",
            "type": "shell",
            "command": "source .script/_conf.sh; docker exec -it go_build_${_PRJ_NAME} target_data/.script/go_build.sh 'windows' 'amd64' './src' \"build/win-${_PRJ_NAME}.exe\"",
            "dependsOn": [
                "develop container start"
            ],
            "problemMatcher": [
                "$go"
            ]
        },
        {
            "label": "go-build-release",
            "type": "shell",
            "command": "source .script/_conf.sh; docker exec -it go_build_${_PRJ_NAME} target_data/.script/go_build_release.sh",
            "dependsOn": [
                "develop container start"
            ],
            "problemMatcher": [
                "$go"
            ]
        },
        {
            "label": "protobuf go build in container",
            "type": "shell",
            "command": "source .script/_conf.sh; docker exec -it proto_go_build_${_PRJ_NAME} target_data/.script/proto_go_build.sh ./lib/proto/src ./proto",
            "dependsOn": [
                "develop container start"
            ],
            "problemMatcher": []
        },
        {
            "label": "build",
            "dependsOrder": "sequence",
            "dependsOn": [
                "go-build"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },
        {
            "label": "release container build",
            "type": "shell",
            "command": "source .script/_conf.sh; docker build --target release -t ping_grpc_server:${_GIT_TAG} -t ping_grpc_server:latest -f .docker/go_build/Dockerfile .",
            "dependsOrder": "sequence",
            "dependsOn": [
                "develop container build"
            ],
            "problemMatcher": []
        }
    ]
}